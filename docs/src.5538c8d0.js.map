{"version":3,"sources":["node_modules/dayjs/dayjs.min.js","node_modules/dayjs/plugin/weekday.js","node_modules/dayjs/plugin/weekOfYear.js","src/index.js"],"names":["weekday","require","weekOfYear","dayjs","extend","currentMonthDays","previousMonthDays","nextMonthDays","WEEKDAYS","TODAY","format","INITIAL_YEAR","INITIAL_MONTH","app","document","getElementById","innerHTML","CAL_NUM_MONTHS_AHEAD","year","parseInt","month","numMonths","urlParams","URLSearchParams","window","location","search","has","get","i","generateCalendarMonth","page","documentHeight","offsetHeight","printStyle","createElement","wrapperElement","classList","add","monthElement","daysOfWeekElement","forEach","weekDayElement","appendChild","innerText","calendarDaysElement","createDaysForCurrentMonth","daysInMonth","createDaysForPreviousMonth","createDaysForNextMonth","day","appendDay","labelElement","labelSpanElement","Date","dayElement","dayElementClassList","dayOfMonthElement","dayOfMonth","isCurrentMonth","date","getNumberOfDaysInMonth","Array","map","index","firstDayOfTheMonthWeekday","getWeekday","previousMonth","subtract","visibleNumberOfDaysFromPreviousMonth","previousMonthLastMondayDayOfMonth","lastDayOfTheMonthWeekday","length","nextMonth","body"],"mappings":"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","file":"src.5538c8d0.js","sourceRoot":"..","sourcesContent":["!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\"use strict\";var t=\"millisecond\",n=\"second\",e=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",o=\"quarter\",a=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\"\"+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:a,w:s,d:i,h:r,m:e,s:n,ms:t,Q:o}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return l;if(\"string\"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?\"string\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u,$offset:n.$offset})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\"string\"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,\"$y\",a)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",e)},d.second=function(t){return this.$g(t,\"$s\",n)},d.millisecond=function(n){return this.$g(n,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,o){var h=this,f=!!D.u(o)||o,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case e:return $(M+\"Seconds\",2);case n:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,o){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[a]=c+\"FullYear\",h[r]=c+\"Hours\",h[e]=c+\"Minutes\",h[n]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(o-this.$W):o;if(f===u||f===a){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,o){var h,f=this;t=Number(t);var c=D.p(o),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===a)return this.set(a,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.$d.getTime()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return\"Invalid Date\";var e=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,o=this.$M,a=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,n,e){var r=t<12?\"AM\":\"PM\";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:D.s(o+1,2,\"0\"),MMM:c(i.monthsShort,o,h,3),MMMM:h[o]||h(this,e),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,a,2),ddd:c(i.weekdaysShort,this.$W,a,3),dddd:a[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[a]=y/12,c[u]=y,c[o]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone(),r=M(t,n,!0);return r&&(e.$L=r),e},d.clone=function(){return D.w(this.$d,this)},d.toDate=function(){return new Date(this.valueOf())},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.dayjs_plugin_weekday=t()}(this,function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,n=this.$W,i=(n<t?n+7:n)-t;return this.$utils().u(e)?i:this.subtract(i,\"day\").add(e,\"day\")}}});\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.dayjs_plugin_weekOfYear=t()}(this,function(){\"use strict\";return function(e,t,i){var n=t.prototype;n.week=function(e){if(void 0===e&&(e=null),null!==e)return this.add(7*(e-this.week()),\"day\");var t=this.$locale().weekStart||0,n=i(this).startOf(\"year\"),o=n.subtract(n.day()-t,\"day\").subtract(1,\"millisecond\"),r=this.diff(o,\"week\",!0),u=Math.ceil(r);return u>52?1:u},n.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}});\n","import dayjs from \"dayjs\";\nimport \"./print.css\";\nimport \"./styles.css\";\nconst weekday = require(\"dayjs/plugin/weekday\");\nconst weekOfYear = require(\"dayjs/plugin/weekOfYear\");\n\ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\n\nconst WEEKDAYS = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\nconst TODAY = dayjs().format(\"YYYY-MM-DD\");\n\nconst INITIAL_YEAR = dayjs().format(\"YYYY\");\nconst INITIAL_MONTH = dayjs().format(\"M\");\n\nlet currentMonthDays;\nlet previousMonthDays;\nlet nextMonthDays;\n\nconst app = document.getElementById(\"app\");\napp.innerHTML = '';\n\n/** Parse input parameters */\nconst CAL_NUM_MONTHS_AHEAD = 12;\n\nlet year = parseInt(INITIAL_YEAR);\nlet month = parseInt(INITIAL_MONTH);\nlet numMonths = CAL_NUM_MONTHS_AHEAD;\n\nconst urlParams = new URLSearchParams(window.location.search);\n\nif (urlParams.has(\"year\")) year = parseInt(urlParams.get(\"year\"));\nif (urlParams.has(\"month\")) month = parseInt(urlParams.get(\"month\"));\nif (urlParams.has(\"num\")) numMonths = parseInt(urlParams.get(\"num\"));\n\n/** Generate calendar months */\n\nfor (let i = 0; i < numMonths; i++) {\n  // console.log(\"Generating: \", year, month);\n  generateCalendarMonth(year, month++);\n\n  if (month == 13) {\n    year += 1;\n    month = 1;\n  }\n}\n\n/** Add print Styles */\n\nconst page = document.getElementById(\"page\");\nlet documentHeight = page.offsetHeight + 100;\nconst printStyle = document.createElement('style');\n\nprintStyle.innerHTML = `\n  @page {\n    size: 21.0cm ${documentHeight}px;\n    margin: 0;\n  }\n  @media print {\n    html, body {\n      width: 21.0cm;\n      height: ${documentHeight}px;\n    }\n  }\n`;\n\ndocument.body.appendChild(printStyle);\n\n/** Helpers */\n\nfunction generateCalendarMonth(year = INITIAL_YEAR, month = INITIAL_MONTH) {\n  const wrapperElement = document.createElement(\"div\");\n  wrapperElement.classList.add(\"calendar-month-wrapper\");\n\n  const monthElement = document.createElement(\"div\");\n  monthElement.classList.add(\"calendar-month\");\n\n  /** Add Weekday Header */\n  const daysOfWeekElement = document.createElement(\"ol\");\n  daysOfWeekElement.classList.add(\"days-of-week\", \"day-of-week\");\n\n  WEEKDAYS.forEach((weekday) => {\n    const weekDayElement = document.createElement(\"li\");\n    daysOfWeekElement.appendChild(weekDayElement);\n    weekDayElement.innerText = weekday;\n  });\n\n  monthElement.appendChild(daysOfWeekElement);\n\n  /** Add Calendar Days body */\n  const calendarDaysElement = document.createElement(\"ol\");\n  calendarDaysElement.classList.add(\"calendar-days\", \"days-grid\");\n\n  currentMonthDays = createDaysForCurrentMonth(\n    year,\n    month,\n    dayjs(`${year}-${month}-01`).daysInMonth()\n  );\n\n  previousMonthDays = createDaysForPreviousMonth(year, month);\n  nextMonthDays = createDaysForNextMonth(year, month);\n\n  const days = [...previousMonthDays, ...currentMonthDays, ...nextMonthDays];\n\n  days.forEach((day) => {\n    appendDay(day, calendarDaysElement);\n  });\n\n  monthElement.appendChild(calendarDaysElement);\n\n  /** Add current month label */\n  const labelElement = document.createElement(\"div\");\n  labelElement.classList.add(\"selected-month\");\n\n  const labelSpanElement = document.createElement(\"span\");\n  // labelSpanElement.classList.add(\"day-of-week\");\n\n  labelSpanElement.innerText = dayjs(\n    new Date(year, month - 1)\n  ).format(\"MMM YY\");\n\n  labelElement.appendChild(labelSpanElement);\n\n  /** Append calendar month */\n  wrapperElement.appendChild(labelElement);\n  wrapperElement.appendChild(monthElement);\n\n  app.appendChild(wrapperElement);\n}\n\nfunction appendDay(day, calendarDaysElement) {\n  const dayElement = document.createElement(\"li\");\n  const dayElementClassList = dayElement.classList;\n  dayElementClassList.add(\"calendar-day\");\n  const dayOfMonthElement = document.createElement(\"span\");\n  dayOfMonthElement.innerText = day.dayOfMonth;\n  dayElement.appendChild(dayOfMonthElement);\n  calendarDaysElement.appendChild(dayElement);\n\n  if (!day.isCurrentMonth) {\n    dayElementClassList.add(\"calendar-day--not-current\");\n  }\n\n  if (day.date === TODAY) {\n    dayElementClassList.add(\"calendar-day--today\");\n  }\n}\n\nfunction getNumberOfDaysInMonth(year, month) {\n  return dayjs(`${year}-${month}-01`).daysInMonth();\n}\n\nfunction createDaysForCurrentMonth(year, month) {\n  return [...Array(getNumberOfDaysInMonth(year, month))].map((day, index) => {\n    return {\n      date: dayjs(`${year}-${month}-${index + 1}`).format(\"YYYY-MM-DD\"),\n      dayOfMonth: index + 1,\n      isCurrentMonth: true\n    };\n  });\n}\n\nfunction createDaysForPreviousMonth(year, month) {\n  const firstDayOfTheMonthWeekday = getWeekday(currentMonthDays[0].date);\n\n  const previousMonth = dayjs(`${year}-${month}-01`).subtract(1, \"month\");\n\n  // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\n  const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday\n    ? firstDayOfTheMonthWeekday - 1\n    : 6;\n\n  const previousMonthLastMondayDayOfMonth = dayjs(currentMonthDays[0].date)\n    .subtract(visibleNumberOfDaysFromPreviousMonth, \"day\")\n    .date();\n\n  return [...Array(visibleNumberOfDaysFromPreviousMonth)].map((day, index) => {\n    return {\n      date: dayjs(\n        `${previousMonth.year()}-${previousMonth.month() + 1}-${\n          previousMonthLastMondayDayOfMonth + index\n        }`\n      ).format(\"YYYY-MM-DD\"),\n      dayOfMonth: previousMonthLastMondayDayOfMonth + index,\n      isCurrentMonth: false\n    };\n  });\n}\n\nfunction createDaysForNextMonth(year, month) {\n  const lastDayOfTheMonthWeekday = getWeekday(\n    `${year}-${month}-${currentMonthDays.length}`\n  );\n\n  const nextMonth = dayjs(`${year}-${month}-01`).add(1, \"month\");\n\n  const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday\n    ? 7 - lastDayOfTheMonthWeekday\n    : lastDayOfTheMonthWeekday;\n\n  return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\n    return {\n      date: dayjs(\n        `${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`\n      ).format(\"YYYY-MM-DD\"),\n      dayOfMonth: index + 1,\n      isCurrentMonth: false\n    };\n  });\n}\n\nfunction getWeekday(date) {\n  return dayjs(date).weekday();\n}\n"]}